#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<string.h>

using namespace std;

int cache[101][101];
string W, S;
int search(int w, int s)
{
	//메모이제이션
	int &ret = cache[w][s];

	if (ret != -1) return ret;
	//W[w]와 S[s]를 맞춰 나간다.
	if (w < W.size() && s < S.size() && (W[w] == '?' || W[w] == S[s]))
		return ret = search(w + 1, s + 1);

	if ((w == W.size()) && (s == S.size()))
		return ret = 1;
	//4.*를 만나서 끝난 경우: *에 몇 글자를 대응해야 할지 재귀 호출하면서 확인하다.
	if(W[w] == '*')
	{
		if (search(w + 1, s) || (s < S.size() && search(w, s + 1)))
			return ret;
	}
	return ret = 0;
}

int main(int argc, char *argv[])
{
	int Testcase;
	cin >> Testcase;

	for (int i = 0; i < Testcase; i++)
	{
		int num;
		vector<string>v;
		cin >> W;
		cin >> num;
		for (int j = 0; j < num; j++)
		{
			memset(cache, -1, sizeof(cache));
			cin >> S;
			if (search(0, 0))
				v.push_back(S);
		}
		sort(v.begin(), v.end());
		for (int k = 0; k < v.size(); k++)
			cout << v[k] << endl;
	}

	return 0;
}
