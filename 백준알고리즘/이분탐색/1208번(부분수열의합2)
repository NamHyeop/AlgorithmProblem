#include<bits/stdc++.h>

using namespace std;

long long ret;
int n, s, half;
vector<int> v;
map<int, int> mp;

void dfsLeft(int idx, int sum)
{
	if (idx == half)
	{
		mp[sum]++;
		return;
	}
	dfsLeft(idx + 1, sum);
	dfsLeft(idx + 1, sum + v[idx]); 
}

void dfsRight(int idx, int sum)
{
	if (idx == n)
	{
		ret += mp[s - sum];
		return;
	}
	dfsRight(idx + 1, sum);
	dfsRight(idx + 1, sum + v[idx]);
}

int main()
{
	cin >> n >> s;
	v.resize(n);
	
	half = n / 2;
	for (int i = 0; i < n; i++)
		cin >> v[i];
	dfsLeft(0, 0);
	dfsRight(half, 0);
	if (s == 0)
		ret--;
	cout << ret;
}
