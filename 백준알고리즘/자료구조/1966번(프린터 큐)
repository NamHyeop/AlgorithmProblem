#include<iostream>
#include<queue>
using namespace std;

//우선순위 큐에 제일 큰 값을 할당시키고
//q에 값을 두고 우선순위큐의 top값과 같을 때까지 반복함. 그 기간중 증가시킨 카운트가 반환값 
int main(int argc, char * argv[])
{
	int Testcase;
	cin >> Testcase;

	for (int i = 0; i < Testcase; i++)
	{
		queue<pair<int,int>> q;
		priority_queue<int> pq;
		int n;
		int findvalue;
		int count = 0;
		cin >> n;
		cin >> findvalue;

		for (int i = 0; i < n; i++)
		{
			int AllocationValue;
			cin >> AllocationValue;
			q.push({ i, AllocationValue });
			pq.push(AllocationValue);
		}

		while (!q.empty())
		{
			int tmpPosition = q.front().first;
			int tmpValue = q.front().second;
			q.pop();

			if (tmpValue == pq.top()) //우선순위 큐 안에있는 가중치가 가장큰 값이 맞으면
			{
				pq.pop();
				count++;

				if (tmpPosition == findvalue) //내가 찾고자 하는 위치도 맞으면
				{
					cout << count << endl; //정답 출력
					break;
				}
			}
			else
				q.push({ tmpPosition, tmpValue });	
		}
	}
	return 0;
}
